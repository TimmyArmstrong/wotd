name: Update Location and Generate E-Paper Image

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    # Runs at minute 0 past every 2 hour (midnight, 4am, 8am, noon, 4pm, 8pm UTC)
    - cron: '0 */2 * * *'

permissions:
  contents: write

jobs:
  update-and-generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Remove old location-data.txt if exists
        run: rm -f location-data.txt

      - name: Download location-data.txt from Dropbox
        run: |
          curl -L -H 'Cache-Control: no-cache' -o location-data.txt "https://www.dropbox.com/scl/fi/mqwgwsek3u8d00li3u30u/location-data.txt?rlkey=2jyqwrscxikpz2470jtmnki4v&st=8ooo0zw5&dl=1"

      - name: Stage location-data.txt
        run: git add location-data.txt

      - name: Configure Git for location file commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Pull latest changes before push
        run: |
          git pull --rebase origin main || echo "No changes to pull"

      - name: Always commit and push location-data.txt
        run: |
          git add location-data.txt
          git commit -m "Update location-data.txt from Dropbox [force push]" || echo "Nothing to commit"
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} HEAD:${{ github.ref_name }}

      - name: Install dependencies
        run: pip install requests

      - name: Run location fetcher script
        run: python location_fetcher.py

      - name: Commit and push changes from location fetcher
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "Update from location fetcher script [skip ci]"
            git pull --rebase origin main || echo "No remote changes"
            git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} HEAD:${{ github.ref_name }}
          else
            echo "No changes from location fetcher to commit"
          fi

      - name: Install Pillow
        run: python -m pip install pillow

      - name: Show old epaper_output.bmp checksum (if exists)
        run: |
          if test -f epaper_output.bmp; then
            echo "Old epaper_output.bmp checksum:"
            sha256sum epaper_output.bmp
          else
            echo "No existing epaper_output.bmp"
          fi

      - name: Remove old epaper_output.bmp if exists
        run: rm -f epaper_output.bmp

      - name: Run image generation script
        run: python "generate_image.py"

      - name: Show new epaper_output.bmp checksum
        run: sha256sum epaper_output.bmp

      - name: Confirm image file exists
        run: |
          ls -l epaper_output.bmp || echo "Image not found!"

      - name: Configure Git for image commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push epaper_output.bmp if changed
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git add epaper_output.bmp
          echo "Git status after adding epaper_output.bmp:"
          git status
          echo "Staged files:"
          git diff --cached --name-only
          if ! git diff --cached --quiet; then
            git commit -m "Add generated epaper_output.bmp [skip ci]"
            git push https://x-access-token:${GH_PAT}@github.com/${GITHUB_REPOSITORY} HEAD:${GITHUB_REF_NAME}
          else
            echo "No changes to commit"
          fi
